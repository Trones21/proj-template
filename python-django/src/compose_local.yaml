# This file uses our pre-built images rather than building during the compose
# run with docker compose -f compose_local.yaml up
services:
  traefik:
    image: traefik:v2.10
    container_name: pk_projName-reverse-proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
    restart: unless-stopped

  frontend:
    image: frontend:latest
    container_name: pk_projName-frontend
    ports:
      - "9000:80" # Expose frontend on port 9000
    labels:
      - "traefik.enable=true"
      # - "traefik.http.routers.frontend.rule=Host(`frontend.local`)" # use for local containers
      - "traefik.http.routers.frontend.rule=Host(`talktop.us`)" # use for deployment
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    depends_on:
      - traefik
    restart: unless-stopped

  backend:
    image: backend:latest
    container_name: pk_projName-backend
    # command: ["sh", "-c", "while true; do sleep 30; done"] #override if the container doesnt stay up (b/c backend app exiting immediately)
    ports:
      - "4500:8080" # Expose backend on port 4500 for local testing
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.strip-api-prefix.stripprefix.prefixes=/api" # allows use to have root routes in go app without the api prefix, but use the api prefix when calling from external sources
      - "traefik.http.routers.backend.middlewares=strip-api-prefix" # middleware for above
    env_file:
      - ./backend/.env_local # Load backend environment variables
    extra_hosts:
      - "host.docker.internal:host-gateway" #adding my machine as a host (for postgres access)
    depends_on:
      - traefik
    restart: no
